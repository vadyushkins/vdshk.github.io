<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>vdshk blog</title><link>https://vdshk.me/</link><atom:link href="https://vdshk.me/index.xml" rel="self" type="application/rss+xml"/><description>vdshk blog</description><generator>Wowchemy (https://wowchemy.com)</generator><language>ru</language><copyright>© 2021 Vadim Abzalov</copyright><lastBuildDate>Tue, 09 Nov 2021 12:45:16 +0300</lastBuildDate><image><url>https://vdshk.me/media/icon_hua908ffaee85184b139d79f55f9be504d_127086_512x512_fill_lanczos_center_3.png</url><title>vdshk blog</title><link>https://vdshk.me/</link></image><item><title>LeetCode 807</title><link>https://vdshk.me/post/leetcode-807/</link><pubDate>Tue, 09 Nov 2021 12:45:16 +0300</pubDate><guid>https://vdshk.me/post/leetcode-807/</guid><description>&lt;blockquote>
&lt;p>🙏 Спасибо LeetCode за замечательную задачу &lt;a href="https://leetcode.com/problems/max-increase-to-keep-city-skyline/" target="_blank" rel="noopener">&amp;ldquo;807. Max Increase to Keep City Skyline&amp;rdquo;&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;details class="toc-inpage d-print-none " open>
&lt;summary class="font-weight-bold">Содержание&lt;/summary>
&lt;nav id="TableOfContents">
&lt;ul>
&lt;li>&lt;a href="#задача">Задача&lt;/a>
&lt;ul>
&lt;li>&lt;a href="#ограничения">Ограничения&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;a href="#примеры">Примеры&lt;/a>&lt;/li>
&lt;li>&lt;a href="#решение">Решение&lt;/a>&lt;/li>
&lt;/ul>
&lt;/nav>
&lt;/details>
&lt;h2 id="задача">Задача&lt;/h2>
&lt;p>Имеется город, состоящий из $n \times n$ блоков, где каждый блок содержит ровно одно
здание в форме вертикальной квадратной призмы.
Дана &lt;strong>заиндексированная с 0&lt;/strong> матрица целых чисел &lt;code>grid&lt;/code>,
где &lt;code>grid[i][j]&lt;/code> - представляет собой &lt;strong>высоту&lt;/strong> здания, находящегося
в блоке на &lt;code>i&lt;/code>-ой строке в &lt;code>j&lt;/code>-ом столбце города.&lt;/p>
&lt;p>&lt;strong>Горизонт города&lt;/strong> - это внешний контур города, образованный всеми зданиями,
есди смотреть на город издалека.
&lt;strong>Горизонт города&lt;/strong> с каждой стороны света может выглядеть по-разному.&lt;/p>
&lt;p>Разрешается увеличивать высоту любого здания на любую величину, но горизонт города
не должен меняться с любой стороны света.&lt;/p>
&lt;p>От вас требуется вычислить максимальную сумму, на которую может быть увеличена высота
зданий без изменения горизонта города с любой стороны света.&lt;/p>
&lt;h3 id="ограничения">Ограничения&lt;/h3>
&lt;ul>
&lt;li>&lt;code>n == grid.length&lt;/code>&lt;/li>
&lt;li>$\forall i \in \{0, \dots, n - 1\}: $ &lt;code>n == grid[i].length&lt;/code>&lt;/li>
&lt;li>$2 \leq n \leq 50$&lt;/li>
&lt;li>$0 \leq grid[i][j] \leq 100$&lt;/li>
&lt;/ul>
&lt;h2 id="примеры">Примеры&lt;/h2>
&lt;pre>&lt;code class="language-text">Input: grid = [ [3, 0, 8, 4],
[2, 4, 5, 7],
[9, 2, 6, 3],
[0, 3, 1, 0] ]
Output: 35
`grid` города после максимального возможного увеличения высот всех зданий
new_grid = [ [8, 4, 8, 7],
[7, 4, 7, 7],
[9, 4, 8, 7],
[3, 3, 3, 3] ]
&lt;/code>&lt;/pre>
&lt;pre>&lt;code class="language-text">Input: grid = [[0,0,0],[0,0,0],[0,0,0]]
Output: 0
Нельзя увеличить ни одно здание, так как тогда горизонт города изменится.
&lt;/code>&lt;/pre>
&lt;h2 id="решение">Решение&lt;/h2>
&lt;ul>
&lt;li>Пусть новые высоты зданий это $grid'$&lt;/li>
&lt;li>Так как мы хотим максимизировать $\underset{i, j}{\sum}\{grid'[i][j] - grid[i][j]\}$,
то нам необходимо максимизировать $grid'[i][j]$ для всех $i, j$&lt;/li>
&lt;li>Заметим, что
&lt;ul>
&lt;li>$\forall i, j: grid'[i][j] \leq \underset{0 \leq k &amp;lt; n}{\max}\{grid[i][k]\}$&lt;/li>
&lt;li>$\forall i, j: grid'[i][j] \leq \underset{0 \leq k &amp;lt; n}{\max}\{grid[k][j]\}$&lt;/li>
&lt;li>так как если здание станет выше, чем самое высокое здание в его строке или столбце,
то горизонт города изменится&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Значит $$\forall i, j: grid'[i][j] \leq \min(\underset{0 \leq k &amp;lt; n}{\max}\{grid[i][k]\}, \underset{0 \leq k &amp;lt; n}{\max}\{grid[k][j]\})$$&lt;/li>
&lt;li>Отсюда уже очевидно, что $$grid'[i][j] = \min(\underset{0 \leq k &amp;lt; n}{\max}\{grid[i][k]\}, \underset{0 \leq k &amp;lt; n}{\max}\{grid[k][j]\})$$&lt;/li>
&lt;li>А ответ это $$\underset{i, j}{\sum}\{\min(\underset{0 \leq k &amp;lt; n}{\max}\{grid[i][k]\}, \underset{0 \leq k &amp;lt; n}{\max}\{grid[k][j]\}) - grid[i][j]\}$$&lt;/li>
&lt;/ul>
&lt;details class="spoiler " id="spoiler-1">
&lt;summary>Python&lt;/summary>
&lt;p>&lt;pre>&lt;code class="language-python">class Solution:
def maxIncreaseKeepingSkyline(self, grid: List[List[int]]) -&amp;gt; int:
row_max = list(map(max, grid))
col_max = list(map(max, zip(*grid)))
return sum(
min(row_max[i], col_max[j]) - val
for i, row in enumerate(grid)
for j, val in enumerate(row)
)
&lt;/code>&lt;/pre>
&lt;/p>
&lt;/details>
&lt;details class="spoiler " id="spoiler-2">
&lt;summary>C++&lt;/summary>
&lt;p>&lt;pre>&lt;code class="language-cpp">#include &amp;lt;bits/stdc++.h&amp;gt;
#define len(a) (int)a.size()
using namespace std;
typedef string str;
class Solution {
public:
int maxIncreaseKeepingSkyline(vector&amp;lt;vector&amp;lt;int&amp;gt;&amp;gt;&amp;amp; grid) {
int n = len(grid);
vector&amp;lt;int&amp;gt; row_max(n, -1);
vector&amp;lt;int&amp;gt; col_max(n, -1);
for (int i = 0; i &amp;lt; n; ++i) {
for (int j = 0; j &amp;lt; n; ++j) {
row_max[i] = max(row_max[i], grid[i][j]);
col_max[j] = max(col_max[j], grid[i][j]);
}
}
int res = 0;
for (int i = 0; i &amp;lt; n; ++i) {
for (int j = 0; j &amp;lt; n; ++j) {
res += min(row_max[i], col_max[j]) - grid[i][j];
}
}
return res;
}
};
&lt;/code>&lt;/pre>
&lt;/p>
&lt;/details>
&lt;details class="spoiler " id="spoiler-3">
&lt;summary>JavaScript&lt;/summary>
&lt;p>&lt;pre>&lt;code class="language-javascript">/**
* @param {number[][]} grid
* @return {number}
*/
var maxIncreaseKeepingSkyline = function(grid) {
const n = grid.length;
const row_max = Array(n).fill(-1);
const col_max = Array(n).fill(-1);
for (let i = 0; i &amp;lt; n; ++i) {
for (let j = 0; j &amp;lt; n; ++j) {
row_max[i] = Math.max(row_max[i], grid[i][j]);
col_max[j] = Math.max(col_max[j], grid[i][j]);
}
}
let res = 0;
for (let i = 0; i &amp;lt; n; ++i) {
for (let j = 0; j &amp;lt; n; ++j) {
res += Math.min(row_max[i], col_max[j]) - grid[i][j];
}
}
return res;
};
&lt;/code>&lt;/pre>
&lt;/p>
&lt;/details></description></item><item><title>LeetCode 535</title><link>https://vdshk.me/post/leetcode-535/</link><pubDate>Mon, 08 Nov 2021 09:47:24 +0300</pubDate><guid>https://vdshk.me/post/leetcode-535/</guid><description>&lt;blockquote>
&lt;p>🙏 Спасибо LeetCode за замечательную задачу &lt;a href="https://leetcode.com/problems/encode-and-decode-tinyurl/" target="_blank" rel="noopener">&amp;ldquo;535. Encode and Decode TinyURL&amp;rdquo;&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;details class="toc-inpage d-print-none " open>
&lt;summary class="font-weight-bold">Содержание&lt;/summary>
&lt;nav id="TableOfContents">
&lt;ul>
&lt;li>&lt;a href="#задача">Задача&lt;/a>
&lt;ul>
&lt;li>&lt;a href="#ограничения">Ограничения&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;a href="#примеры">Примеры&lt;/a>&lt;/li>
&lt;li>&lt;a href="#решение">Решение&lt;/a>&lt;/li>
&lt;/ul>
&lt;/nav>
&lt;/details>
&lt;h2 id="задача">Задача&lt;/h2>
&lt;p>&lt;code>TinyURL&lt;/code> - это сервис сокращения URL-адресов, в котором вы вводите URL-адрес, например
&lt;code>https://vdshk.me/ru/post/leetcode-535&lt;/code> и получаете короткий URL-адрес, например
&lt;code>https://tinyurl.com/9wa38tpk&lt;/code>.
В этой задаче от вас требуется разработать класс для кодирования и декодирования URL-адреса.&lt;/p>
&lt;p>Нет никаких ограничений на то, как должен работать ваш класс.
Вам просто нужно убедиться, что URL-адрес можно закодировать в короткий URL, а короткий
URL можно декодировать в исходный URL-адрес.&lt;/p>
&lt;p>Реализуйте класс &lt;code>Solution&lt;/code>:&lt;/p>
&lt;ul>
&lt;li>&lt;code>Solution()&lt;/code> инициализирует объект в системе&lt;/li>
&lt;li>&lt;code>String encode(String longUrl)&lt;/code> возвращает короткий URL по данному URL-адресу&lt;/li>
&lt;li>&lt;code>String decode(String shortUrl)&lt;/code> возвращает исходный URL-адрес по короткому URL
(гарантируется, что &lt;code>shortUrl&lt;/code> закодирован тем же объектом)&lt;/li>
&lt;/ul>
&lt;h3 id="ограничения">Ограничения&lt;/h3>
&lt;ul>
&lt;li>$1 \leq \text{url.length} \leq 10^4$&lt;/li>
&lt;li>гарантируется, что &lt;code>url&lt;/code> - корректный URL-адрес&lt;/li>
&lt;/ul>
&lt;h2 id="примеры">Примеры&lt;/h2>
&lt;pre>&lt;code class="language-text">Input: &amp;quot;https://vdshk.me/ru/post/leetcode-535&amp;quot;
Output: &amp;quot;https://vdshk.me/ru/post/leetcode-535&amp;quot;
Explanation:
// создаём объект для кодирования/декодирования
Solution obj = new Solution();
// tiny - закодированный url
string tiny = obj.encode(url);
// ans - декодированный tiny; должен совпасть с url
string ans = obj.decode(tiny);
&lt;/code>&lt;/pre>
&lt;h2 id="решение">Решение&lt;/h2>
&lt;blockquote>
&lt;p>Нет никаких ограничений на то, как должен работать ваш класс.&lt;/p>
&lt;/blockquote>
&lt;p>Значит, вместо &lt;code>encode&lt;/code> и &lt;code>decode&lt;/code> можно использовать &lt;code>id&lt;/code>.
То есть возвращать то, что получаем.&lt;/p>
&lt;details class="spoiler " id="spoiler-1">
&lt;summary>Python&lt;/summary>
&lt;p>&lt;pre>&lt;code class="language-python">class Codec:
def encode(self, longUrl: str) -&amp;gt; str:
&amp;quot;&amp;quot;&amp;quot;Encodes a URL to a shortened URL.
&amp;quot;&amp;quot;&amp;quot;
return longUrl
def decode(self, shortUrl: str) -&amp;gt; str:
&amp;quot;&amp;quot;&amp;quot;Decodes a shortened URL to its original URL.
&amp;quot;&amp;quot;&amp;quot;
return shortUrl
# Your Codec object will be instantiated and called as such:
# codec = Codec()
# codec.decode(codec.encode(url))
&lt;/code>&lt;/pre>
&lt;/p>
&lt;/details>
&lt;details class="spoiler " id="spoiler-2">
&lt;summary>C++&lt;/summary>
&lt;p>&lt;pre>&lt;code class="language-cpp">#include &amp;lt;bits/stdc++.h&amp;gt;
#define len(a) (int)a.size()
using namespace std;
typedef string str;
class Solution {
public:
// Encodes a URL to a shortened URL.
string encode(string longUrl) {
return longUrl;
}
// Decodes a shortened URL to its original URL.
string decode(string shortUrl) {
return shortUrl;
}
};
// Your Solution object will be instantiated and called as such:
// Solution solution;
// solution.decode(solution.encode(url));
&lt;/code>&lt;/pre>
&lt;/p>
&lt;/details>
&lt;details class="spoiler " id="spoiler-3">
&lt;summary>JavaScript&lt;/summary>
&lt;p>&lt;pre>&lt;code class="language-javascript">/**
* Encodes a URL to a shortened URL.
*
* @param {string} longUrl
* @return {string}
*/
const encode = function (longUrl) {
return longUrl;
};
/**
* Decodes a shortened URL to its original URL.
*
* @param {string} shortUrl
* @return {string}
*/
const decode = function (shortUrl) {
return shortUrl;
};
/**
* Your functions will be called as such:
* decode(encode(url));
*/
&lt;/code>&lt;/pre>
&lt;/p>
&lt;/details></description></item><item><title>How to Install Hugo Extended on Ubuntu 20.04</title><link>https://vdshk.me/post/how-to-install-hugo-extended-on-ubuntu-20-04/</link><pubDate>Wed, 22 Sep 2021 20:01:48 +0300</pubDate><guid>https://vdshk.me/post/how-to-install-hugo-extended-on-ubuntu-20-04/</guid><description>&lt;p>All you need to install Hugo Extended is to download the corresponding &lt;code>.deb&lt;/code> file from the hugo repository
(can be found here 👉 &lt;a href="https://github.com/gohugoio/hugo/releases" target="_blank" rel="noopener">link&lt;/a>).&lt;/p>
&lt;p>For now (September 2021), the corresponding release is &lt;code>hugo_extended_0.88.1_Linux-64bit.deb&lt;/code>:&lt;/p>
&lt;pre>&lt;code class="language-shell">wget https://github.com/gohugoio/hugo/releases/download/v0.88.1/hugo_extended_0.88.1_Linux-64bit.deb
&lt;/code>&lt;/pre>
&lt;p>After that, it is enough to install this package using &lt;a href="https://wiki.debian.org/Teams/Dpkg" target="_blank" rel="noopener">dpkg&lt;/a>:&lt;/p>
&lt;pre>&lt;code class="language-shell">dpkg --install hugo_extended_0.88.1_Linux-64bit.deb
&lt;/code>&lt;/pre>
&lt;p>That&amp;rsquo;s all ✌&lt;/p></description></item><item><title>GSoC 2021 Final</title><link>https://vdshk.me/post/gsoc-2021-final/</link><pubDate>Fri, 20 Aug 2021 13:43:56 +0300</pubDate><guid>https://vdshk.me/post/gsoc-2021-final/</guid><description>&lt;h1 id="-project">🚀 Project&lt;/h1>
&lt;p>The goal of this project is to create Jupyter notebooks that will become detailed and intuitive tutorials
containing the ideas behind, explanations and experimental analysis of the algorithms
implemented in NetworkX.
I decided to start with a tutorial on directed acyclic graphs (DAGs for short).&lt;/p>
&lt;p>Under the project, I wrote a tutorial explaining the various concepts of graphs.
The main ones were
&lt;a href="https://networkx.org/nx-guides/content/algorithms/dag/index.html#directed-graph" target="_blank" rel="noopener">Directed Graph&lt;/a>
and
&lt;a href="https://networkx.org/nx-guides/content/algorithms/dag/index.html#directed-acyclic-graph" target="_blank" rel="noopener">Directed Acyclic Graph&lt;/a>.
In addition to explanation of the theory,
I developed examples using NetworkX and found various
&lt;a href="https://networkx.org/nx-guides/content/algorithms/dag/index.html#applications" target="_blank" rel="noopener">real-world applications&lt;/a>
of these concepts.&lt;/p>
&lt;p>Moreover, I wrote about
&lt;a href="https://networkx.org/nx-guides/content/algorithms/dag/index.html#topological-sort" target="_blank" rel="noopener">topological sort&lt;/a> -
one of the most basic algorithms for working with DAGs.
It was very interesting to describe step-by-step how this algorithm works in a clear and comprehensible manner.&lt;/p>
&lt;p>You can read about it in details
&lt;a href="https://networkx.org/nx-guides/content/algorithms/dag/index.html#" target="_blank" rel="noopener">here&lt;/a>.&lt;/p>
&lt;h1 id="-results">✅ Results&lt;/h1>
&lt;p>The main result of my work is the
&lt;a href="https://networkx.org/nx-guides/content/algorithms/dag/index.html#" target="_blank" rel="noopener">topological sort tutorial&lt;/a>.&lt;/p>
&lt;ul>
&lt;li>✅ Corresponding &lt;strong>merged PR:&lt;/strong>
&lt;a href="https://github.com/networkx/nx-guides/pull/44" target="_blank" rel="noopener">[GSoC contribution] Topological sort notebook&lt;/a>.&lt;/li>
&lt;/ul>
&lt;p>Furthermore, during the work on DAGs module of NetworkX, I opened several PRs with improvements:&lt;/p>
&lt;ul>
&lt;li>✅ &lt;strong>Merged PR&lt;/strong> to improve code base:
&lt;a href="https://github.com/networkx/networkx/pull/5017" target="_blank" rel="noopener">[GSoC contribution] Improving functions descendants and ancestors in dag.py&lt;/a>&lt;/li>
&lt;li>✅ &lt;strong>Merged PR&lt;/strong> to improve documentation:
&lt;a href="https://github.com/networkx/networkx/pull/5019" target="_blank" rel="noopener">[GSoC contribution] Adding examples to docstrings in dag.py&lt;/a>&lt;/li>
&lt;/ul>
&lt;h1 id="-conclusion">🥳 Conclusion&lt;/h1>
&lt;p>I want to express my deep gratitude to my mentors:
&lt;a href="https://github.com/ericmjl" target="_blank" rel="noopener">Eric Ma&lt;/a>
and
&lt;a href="https://github.com/rossbar" target="_blank" rel="noopener">Ross Barnowski&lt;/a>.
It was a real pleasure to work with you guys.
I look forward to further productive cooperation.&lt;/p></description></item><item><title>GSoC 2021 Start</title><link>https://vdshk.me/post/gsoc-2021-start/</link><pubDate>Fri, 16 Jul 2021 18:30:54 +0300</pubDate><guid>https://vdshk.me/post/gsoc-2021-start/</guid><description>&lt;h1 id="-summer-2021">🌞 ️Summer 2021&lt;/h1>
&lt;p>I am happy to have been accepted to
&lt;a href="https://summerofcode.withgoogle.com/" target="_blank" rel="noopener">Google Summer of Code 2021&lt;/a>
with the project
&lt;strong>&amp;ldquo;Pedagogical Interactive Notebooks for Algorithms Implemented in &lt;a href="https://networkx.org/" target="_blank" rel="noopener">NetworkX&lt;/a>&amp;quot;&lt;/strong>.
I will be writing code under the mentorship of
&lt;a href="https://github.com/ericmjl" target="_blank" rel="noopener">Eric Ma&lt;/a>
and
&lt;a href="https://github.com/rossbar" target="_blank" rel="noopener">Ross Barnowski&lt;/a>.
The goal of this project is to create Jupyter notebooks that will become detailed and intuitive tutorials
containing the ideas behind, explanations and experimental analysis of the algorithms
implemented in NetworkX.&lt;/p>
&lt;p>Let me tell you about how I got there.&lt;/p>
&lt;h2 id="-google-summer-of-code">👨‍💻 Google Summer of Code&lt;/h2>
&lt;p>The Google Summer of Code, often abbreviated to GSoC, is an international annual program
in which Google awards stipends to students who successfully complete a 10-week
free and open-source software coding project during their break from school.
The program is open to university students aged 18 or over.
The amount of the stipend depends on
&lt;a href="https://developers.google.com/open-source/gsoc/help/student-stipends" target="_blank" rel="noopener">the purchasing power parity&lt;/a>
of the country where the student&amp;rsquo;s university is located.
Project ideas are listed by host organizations involved in open-source software development,
though students can also propose their own project ideas.&lt;/p>
&lt;p>This year it has been essential to me not to miss the GSoC,
so I have written down the estimated dates for the stages that are important for a student.&lt;/p>
&lt;h3 id="-timeline">⏰ Timeline&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>✅ &lt;strong>Organizations Announced&lt;/strong>&lt;/p>
&lt;p>📅 early March&lt;/p>
&lt;p>📝 Students can begin discussing project ideas with open source organizations
that accepted to participate as a mentor organization.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>✅ &lt;strong>Student Application Period&lt;/strong>&lt;/p>
&lt;p>📅 end of March — mid-April&lt;/p>
&lt;p>📝 Students can register and submit their proposals to mentor organizations.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>✅ &lt;strong>Application Review Period&lt;/strong>&lt;/p>
&lt;p>📅 mid-April — mid-May&lt;/p>
&lt;p>📝 Mentor organizations review and select student proposals.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>✅ &lt;strong>Student Projects Announced&lt;/strong>&lt;/p>
&lt;p>📅 at the end of the review period&lt;/p>
&lt;p>📝 Accepted students are paired with a mentor and start planning their projects and milestones.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>The key stage is the &lt;strong>Student Application Period&lt;/strong>.
That is when you have to figure out which project you want to work on and make a proposal
for what you are going to do for it during the summer.&lt;/p>
&lt;p>For those lucky ones, who were accepted, there are a few more important stages.&lt;/p>
&lt;ul>
&lt;li>
&lt;p>✅ &lt;strong>Community Bonding&lt;/strong>&lt;/p>
&lt;p>📅 from the moment student projects announced — early June&lt;/p>
&lt;p>📝 Students spend a month learning more about their organization&amp;rsquo;s community.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>✅ &lt;strong>Coding, part 1&lt;/strong>&lt;/p>
&lt;p>📅 early June — mid-July&lt;/p>
&lt;p>📝 Students work on their Google Summer of Code projects.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>✅ &lt;strong>First Evaluations&lt;/strong>&lt;/p>
&lt;p>📅 mid-July&lt;/p>
&lt;p>📝 Mentors and students submit their evaluations of one another.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>✅ &lt;strong>Coding, part 2&lt;/strong>&lt;/p>
&lt;p>📅 mid-July — mid-August&lt;/p>
&lt;p>📝 Students work on their Google Summer of Code projects.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>✅ &lt;strong>Final Evaluations&lt;/strong>&lt;/p>
&lt;p>📅 mid-August&lt;/p>
&lt;p>📝 Students submit their code, project summaries, and final evaluations of their mentors.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>✅ &lt;strong>Results Announced&lt;/strong>&lt;/p>
&lt;p>📅 end of August&lt;/p>
&lt;p>📝 Students are notified of the pass/fail status of their Google Summer of Code projects.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h3 id="-my-advice">😎 My advice&lt;/h3>
&lt;p>The participation process for accepted students can vary from organization to organization.
And here I have no recommendations for you.&lt;/p>
&lt;p>By contrast, I have some advice to help you maximize your chance of being accepted into the GSoC.&lt;/p>
&lt;h4 id="-start-as-early-as-possible">👨‍🏫 &lt;strong>Start as early as possible&lt;/strong>&lt;/h4>
&lt;p>Contact mentors early!
The earlier you contact mentors, the earlier you may receive feedback from them
to improve your proposal and the higher your chance of being accepted will be.&lt;/p>
&lt;p>The answers of the mentors will make it clear whether it would be comfortable to work with them in the summer.
It gives you more time to find the right mentor organization.&lt;/p>
&lt;h4 id="-focus-on-quality">👨‍🏫 &lt;strong>Focus on quality&lt;/strong>&lt;/h4>
&lt;p>Think about your choice of a project carefully, you are going to be doing it for a couple of months,
so it is very important that you choose something you are going to enjoy.&lt;/p>
&lt;p>Make sure you have thought about the project and understood its achievable goals.
Your application should convince mentors that you are capable of completing the project.
If you are not sure about anything, get in touch with mentors, they are ready to advise you.&lt;/p>
&lt;p>The proposal template and examples of accepted proposals from previous years would be very useful to you.
In my case, I used this proposal
&lt;a href="https://github.com/numfocus/gsoc/blob/master/templates/proposal.md" target="_blank" rel="noopener">template&lt;/a>
and
&lt;a href="https://github.com/numfocus/gsoc/tree/master/2018" target="_blank" rel="noopener">examples&lt;/a>.&lt;/p>
&lt;p>Remember that after you have been accepted, you can edit your proposal at any time.&lt;/p>
&lt;h4 id="-show-your-technical-skills">👨‍🏫 &lt;strong>Show your technical skills&lt;/strong>&lt;/h4>
&lt;p>Create at least one Pull Request before the Student Application Period ends!
The best way to do this is to close an issue from the project.
Many projects have issues marked &lt;code>Good First Issue&lt;/code> and closing such type of issue would be a good starting point.&lt;/p>
&lt;p>Commit early and commit often!
So that mentors can see and review your work.&lt;/p>
&lt;p>✌ That is all I wanted to tell you today.
I hope this post will be useful to you.
Good luck and have a nice day!&lt;/p></description></item></channel></rss>